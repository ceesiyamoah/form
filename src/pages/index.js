import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import TextField from '@/components/TextField/TextField';
import { useState } from 'react';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
	const [info, setInfo] = useState({
		first_name: '',
		last_name: '',
		date_of_birth: '',
		cities_travelled: [
			{
				city_name: '',
				date_arrived: '',
			},
		],
	});

	const handleDetailsChange = (e, index) => {
		const { name, value } = e.target;
		if (typeof index !== 'number') {
			setInfo((p) => ({ ...p, [name]: value }));
		} else {
			setInfo((p) => {
				const toChange = p.cities_travelled[index];
				toChange[name] = value;
				p.cities_travelled[index] = toChange;

				return { ...p };
			});
		}
	};

	const handleAddCity = () => {
		setInfo((p) => ({
			...p,
			cities_travelled: [
				...p.cities_travelled,
				{
					city_name: '',
					date_arrived: '',
				},
			],
		}));
	};

	/**
	 * Remove by index if there's only one left reset it so it never gets to 0
	 * @param {number} index index to remove
	 */
	const handleRemoveCity = (index) => {
		if (info.cities_travelled.length === 1) {
			setInfo((p) => ({ ...p, cities_travelled: [{ city_name: '', date_arrived: '' }] }));
		} else {
			setInfo((p) => ({ ...p, cities_travelled: p.cities_travelled.filter((item, i) => i !== index) }));
		}
	};

	const handleSubmit = (e) => {
		e.preventDefault();

		/*
    sample JSON below
    {
      "first_name": "asdf",
      "last_name": "fasdf",
      "date_of_birth": "2024-01-04",
      "cities_travelled": [
        {
          "city_name": "fasdf",
          "date_arrived": "2024-01-19"
        }
     ]
    }
    */
		console.log(JSON.stringify(info, null, 2));
	};

	return (
		<>
			<Head>
				<title>Cities form</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className={`${styles.main} ${inter.className}`}>
				<form className={styles.form} onSubmit={handleSubmit}>
					<fieldset className={styles.fieldset}>
						<legend className={styles.legend}>Personal Info</legend>
						<TextField
							label='First Name'
							required
							placeholder='Mike'
							type='text'
							value={info.first_name}
							name='first_name'
							onChange={handleDetailsChange}
						/>
						<TextField
							label='Last Name'
							required
							placeholder='Person'
							type='text'
							value={info.last_name}
							name='last_name'
							onChange={handleDetailsChange}
						/>
						<TextField
							label='Date of Birth'
							required
							placeholder='DOB'
							type='date'
							value={info.date_of_birth}
							name='date_of_birth'
							max={new Date().toISOString().split('T')[0]}
							onChange={handleDetailsChange}
						/>
					</fieldset>
					<fieldset className={styles.fieldset}>
						<legend className={styles.legend}>Cities travelled</legend>
						<div className={styles.citiesContainer}>
							{info.cities_travelled.map((item, index) => (
								<div key={index} className={styles.cityDetails}>
									<TextField
										label='City Name'
										type='text'
										placeholder='Chicago'
										name='city_name'
										value={item.city_name}
										max={new Date().toISOString().split('T')[0]}
										onChange={(e) => handleDetailsChange(e, index)}
										required
									/>
									<TextField
										label='Date arrived'
										type='date'
										placeholder='Date Arrived'
										name='date_arrived'
										value={item.date_arrived}
										max={new Date().toISOString().split('T')[0]}
										onChange={(e) => handleDetailsChange(e, index)}
										required
									/>
									<button
										type='button'
										onClick={() => handleRemoveCity(index)}
										className={`${styles.addmore} ${styles.btn}`}
										style={{ color: 'red' }}
									>
										Remove
									</button>
								</div>
							))}
							<button type='button' onClick={handleAddCity} className={`${styles.addmore} ${styles.btn}`}>
								Add more
							</button>
						</div>
					</fieldset>
					<button className={`${styles.submit} ${styles.btn}`} type='submit'>
						Submit
					</button>
				</form>
			</main>
		</>
	);
}
